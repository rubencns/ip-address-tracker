{"version":3,"sources":["assets/svg/icon-location.svg","components/map/map.jsx","assets/svg/icon-arrow.svg","components/details/details.jsx","services/ip-api/index.js","hooks/useGeoLocation.jsx","components/loader/loader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Map","location","latidude","longitude","MapComponent","useMap","flyTo","markerIcon","Icon","iconUrl","LocationIcon","iconSize","MapContainer","className","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","icon","Popup","Details","geoDetails","ip","isp","city","region","postalCode","timezone","detailsData","label","value","undefined","map","index","width","query","a","fetch","then","res","json","status","Error","message","catch","e","useGeoLocation","useState","data","loading","error","setGeoDetails","getGeoLocation","fetchGeoLocation","zip","lat","lon","err","setTimeout","useEffect","Loader","App","setQuery","input","setInput","onSubmit","preventDefault","type","placeholder","onChange","target","src","RightArrow","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4WAAe,MAA0B,0C,OC2C1BA,MArCH,EAAGC,eAAgB,MAAD,cACEA,EADF,GACrBC,EADqB,KACXC,EADW,KAGtBC,EAAe,KACPC,cACRC,MAAML,GAEH,MAGHM,EAAa,IAAIC,OAAK,CAC1BC,QAASC,EACTC,SAAU,CAAC,GAAI,MAGjB,OACE,eAACC,EAAA,EAAD,CACEC,UAAU,MACVC,OAAQb,EACRc,KAAM,GACNC,iBAAiB,EAJnB,UAME,cAACZ,EAAD,IACA,cAACa,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQC,SAAUpB,EAAUqB,KAAMf,EAAlC,SACE,eAACgB,EAAA,EAAD,CAAOV,UAAU,YAAjB,UACE,2CAAcX,KACd,4CAAeC,cCpCV,MAA0B,uC,uBCoC1BqB,MAjCC,EAAGC,iBAAkB,MAC3BC,EAAgDD,EAAhDC,GAAIC,EAA4CF,EAA5CE,IAAKC,EAAuCH,EAAvCG,KAAMC,EAAiCJ,EAAjCI,OAAQC,EAAyBL,EAAzBK,WAAYC,EAAaN,EAAbM,SAMrCC,EAAc,CAClB,CAAEC,MAAO,aAAcC,MAAOR,GAC9B,CACEO,MAAO,WACPC,MARFN,GAAQC,GAAUC,EAAlB,UACOF,EADP,aACgBC,EADhB,YAC0BC,QACtBK,GAQJ,CAAEF,MAAO,WAAYC,MAAOH,GAC5B,CAAEE,MAAO,MAAOC,MAAOP,IAGzB,OACE,qBAAKd,UAAU,eAAf,SACE,qBAAKA,UAAU,UAAf,SACGmB,EAAYI,KAAI,EAAGH,QAAOC,SAASG,IAClC,sBAAKxB,UAAU,eAAf,UACE,qBAAKA,UAAU,qBAAf,SAAqC,+BAAOoB,MAC5C,qBAAKpB,UAAU,qBAAf,SACG,4BAAIqB,GAAS,cAAC,IAAD,CAAUI,MAAO,YAHnC,wBAAoDD,W,4ECxBvD,WAAgCE,GAAhC,SAAAC,EAAA,sEACQC,MAAM,2BAAD,OAA4BF,IAC3CG,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,IACL,GAAmB,SAAfA,EAAIE,OAAmB,MAAM,IAAIC,MAAMH,EAAII,SAC/C,OAAOJ,KAERK,OAAOC,IACN,MAAM,IAAIH,MAAMG,EAAEF,YARjB,oF,sBCGQ,SAASG,EAAeX,GAAQ,MAAD,EACRY,mBAAS,CAC3CC,KAAM,GACNC,SAAS,EACTC,MAAO,KAJmC,mBACrC7B,EADqC,KACzB8B,EADyB,KAO5C,SAASC,EAAejB,GACtBgB,EAAc,2BAAK9B,GAAN,IAAkB4B,SAAS,KDXrC,SAAP,kCCYII,CAAiBlB,GACdG,MAAMU,GACLG,EAAc,2BACT9B,GADQ,IAEX2B,KAAM,CACJ1B,GAAI0B,EAAKb,MACTZ,IAAKyB,EAAKzB,IACVC,KAAMwB,EAAKxB,KACXC,OAAQuB,EAAKvB,OACbC,WAAYsB,EAAKM,IACjB3B,SAAUqB,EAAKrB,SACf9B,SAAU,CAACmD,EAAKO,IAAKP,EAAKQ,MAE5BP,SAAS,EACTC,MAAO,QAGVN,OAAOa,IACNN,EAAc,2BAAK9B,GAAN,IAAkB4B,SAAS,EAAOC,MAAOO,EAAId,WAC1De,YACE,IAAMP,EAAc,2BAAK9B,GAAN,IAAkB4B,SAAS,EAAOC,MAAO,OAC5D,QAUR,OALAS,qBAAU,KACRP,EAAejB,KAEd,CAACA,IAEG,CACLa,KAAM3B,EAAW2B,KACjBC,QAAS5B,EAAW4B,QACpBC,MAAO7B,EAAW6B,O,MCjCPU,MAVA,IAEX,sBAAKnD,UAAU,SAAf,UACE,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,mB,MCoDNoD,MApDf,WAAgB,MAAD,EACad,mBAAS,IADtB,mBACNZ,EADM,KACC2B,EADD,OAEaf,mBAAS,IAFtB,mBAENgB,EAFM,KAECC,EAFD,OAGoBlB,EAAeX,GAAxCa,EAHK,EAGLA,KAAMC,EAHD,EAGCA,QAASC,EAHV,EAGUA,MASvB,OACE,sBAAKzC,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,sDAEF,uBAAMA,UAAU,oBAAoBwD,SAXfpB,IACzBA,EAAEqB,iBACFJ,EAASC,IASL,UACE,uBACEtD,UAAU,0BACV0D,KAAK,OACLC,YAAY,sCACZtC,MAAOiC,EACPM,SAnBiBxB,GAAMmB,EAASnB,EAAEyB,OAAOxC,SAqB3C,wBAAQrB,UAAU,2BAAlB,SACE,qBAAK8D,IAAKC,EAAYC,IAAI,qBAG7BvB,GACC,qBAAKzC,UAAU,YAAf,SACE,4BAAIyC,MAIR,cAAC,EAAD,CAAS7B,WAAY2B,OAEvB,sBAAKvC,UAAU,UAAf,UACGwC,GACC,sBAAKxC,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,mDAGFuC,EAAKnD,WAAaoD,GAAW,kDAC9BD,EAAKnD,WAAaoD,GAAW,cAAC,EAAD,CAAKpD,SAAUmD,EAAKnD,kBC1C3C6E,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,EAAGuC,SAAQC,SAAQC,SAAQC,SAAQC,cAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dc4e323c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-location.7e6459d2.svg\";","import { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './map-style.scss';\nimport { Icon } from 'leaflet';\nimport LocationIcon from '../../assets/svg/icon-location.svg';\n\nconst Map = ({ location }) => {\n  const [latidude, longitude] = location;\n\n  const MapComponent = () => {\n    const map = useMap();\n    map.flyTo(location);\n\n    return null;\n  };\n\n  const markerIcon = new Icon({\n    iconUrl: LocationIcon,\n    iconSize: [36, 46],\n  });\n\n  return (\n    <MapContainer\n      className=\"map\"\n      center={location}\n      zoom={13}\n      scrollWheelZoom={false}\n    >\n      <MapComponent />\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker position={location} icon={markerIcon}>\n        <Popup className=\"map-popup\">\n          <p>Latitude: {latidude}</p>\n          <p>Longitude: {longitude}</p>\n        </Popup>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","export default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee.svg\";","import Skeleton from 'react-loading-skeleton';\nimport './details-style.scss';\n\nconst Details = ({ geoDetails }) => {\n  const { ip, isp, city, region, postalCode, timezone } = geoDetails;\n  const location =\n    city && region && postalCode\n      ? `${city}, ${region} ${postalCode}`\n      : undefined;\n\n  const detailsData = [\n    { label: 'ip address', value: ip },\n    {\n      label: 'location',\n      value: location,\n    },\n    { label: 'timezone', value: timezone },\n    { label: 'isp', value: isp },\n  ];\n\n  return (\n    <div className=\"details-wrap\">\n      <div className=\"details\">\n        {detailsData.map(({ label, value }, index) => (\n          <div className=\"details-item\" key={`details-item__${index}`}>\n            <div className=\"details-item-label\">{<span>{label}</span>}</div>\n            <div className=\"details-item-value\">\n              {<p>{value || <Skeleton width={100} />}</p>}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Details;\n","export async function fetchGeoLocation(query) {\n  return await fetch(`https://ip-api.com/json/${query}`)\n    .then((res) => res.json())\n    .then((res) => {\n      if (res.status === 'fail') throw new Error(res.message);\n      return res;\n    })\n    .catch((e) => {\n      throw new Error(e.message);\n    });\n}\n","import { useEffect, useState } from 'react';\nimport { fetchGeoLocation } from '../services/ip-api';\n\nexport default function useGeoLocation(query) {\n  const [geoDetails, setGeoDetails] = useState({\n    data: {},\n    loading: false,\n    error: '',\n  });\n\n  function getGeoLocation(query) {\n    setGeoDetails({ ...geoDetails, loading: true });\n    fetchGeoLocation(query)\n      .then((data) =>\n        setGeoDetails({\n          ...geoDetails,\n          data: {\n            ip: data.query,\n            isp: data.isp,\n            city: data.city,\n            region: data.region,\n            postalCode: data.zip,\n            timezone: data.timezone,\n            location: [data.lat, data.lon],\n          },\n          loading: false,\n          error: '',\n        })\n      )\n      .catch((err) => {\n        setGeoDetails({ ...geoDetails, loading: false, error: err.message });\n        setTimeout(\n          () => setGeoDetails({ ...geoDetails, loading: false, error: '' }),\n          5000\n        );\n      });\n  }\n\n  useEffect(() => {\n    getGeoLocation(query);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  return {\n    data: geoDetails.data,\n    loading: geoDetails.loading,\n    error: geoDetails.error,\n  };\n}\n","import React from 'react';\nimport './loader-style.scss';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <div className=\"loader-item\" />\n      <div className=\"loader-item\" />\n      <div className=\"loader-item\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { useState } from 'react';\nimport Map from './components/map/map';\nimport RightArrow from './assets/svg/icon-arrow.svg';\nimport Details from './components/details/details';\nimport useGeoLocation from './hooks/useGeoLocation';\nimport Loader from './components/loader/loader';\nimport './app-style.scss';\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [input, setInput] = useState('');\n  const { data, loading, error } = useGeoLocation(query);\n\n  const handleInputChange = (e) => setInput(e.target.value);\n\n  const handleQuerySubmit = (e) => {\n    e.preventDefault();\n    setQuery(input);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-header\">\n        <div className=\"app-header-title\">\n          <h1>IP Address Tracker</h1>\n        </div>\n        <form className=\"app-header-search\" onSubmit={handleQuerySubmit}>\n          <input\n            className=\"app-header-search-input\"\n            type=\"text\"\n            placeholder=\"Search for any IP address or domain\"\n            value={input}\n            onChange={handleInputChange}\n          />\n          <button className=\"app-header-search-button\">\n            <img src={RightArrow} alt=\"right arrow\" />\n          </button>\n        </form>\n        {error && (\n          <div className=\"app-error\">\n            <p>{error}</p>\n          </div>\n        )}\n\n        <Details geoDetails={data} />\n      </div>\n      <div className=\"app-map\">\n        {loading && (\n          <div className=\"app-map-loader\">\n            <Loader />\n            <p>Map loading...</p>\n          </div>\n        )}\n        {!data.location && !loading && <p>No map available.</p>}\n        {data.location && !loading && <Map location={data.location} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './global-styles/reset.scss';\nimport './global-styles/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}